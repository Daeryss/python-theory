#                       К_О_Р_Т_Е_Ж_И
#       Кортежи, также, как и строки не изменяемы.
#       В отличии от строк могут хранить разные данные (элементы)
#       кортежи обозначаются круглыми скобками
a = (1, 'abc', 3.05)    #  а - кортеж
print('1.   ', a)
#       кортежам присущи многие приемы работы со строками:
print('2.   ', a * 3)
print('3.   ', a + a)
#
#       кортеж можно получить из строки используя функцию tuple

s = 'string'
b = tuple(s)
print('4.   ', b, 'and', s)
#
#       по аналогии можно применить обратную операцию используя str
print('5.   ', str(a))
#       к кортежу применима функция len, показывающая количество членов кортежа
print('6.   ', len(a), 'для', a, 'и', len(b), 'для',b)
#       в кортеже может хранится другой кортеж
c = (3, (a, 'f', 13), 4.33)     #   в этом кортеже храниться кортеж,
print('7.   ', c)               # в нутри которого кортеж 'a'

print('8.   ', c[1][0][1])      #   обращение к элементу кортежа внутри кортежа

#       можно создать кортеж из одного элемента, записав так: (2,)
c = ('a', 3, (3.4,))
print('7.   ', c[2], 'и', c[2][0])  # c[2] - кортеж, c[2][0] - элемент кортежа
#       СРЕЗЫ кортежа делаются по аналогии со строками
print('8.   ', b[4:], b[:2], b[::-1], sep=' & ')
#
#                       РАСПАКОВКА
info = ('Ivan', 'Ivanov', 29)   # при присваивании кортеж должен быть такой же
name, sername, age = info       # длины, что и количество переменных
print('9.   ', name)
#       упаковка кортежа удобна для присваивания срузу нескольких значений
x, y, z = 1, 2, 3
print('10.  ', x, y, z)
#
#           R_A_N_G_E
x = range(10)
print('11.   tuple(range(10) =', tuple(x))
print('12.   tuple(range(2:10) =', tuple(range(2, 10)))
print('13.   tuple(range(10:2:-2) =', tuple(range(10, 2, -2)))
print('14.   ', end='')
#
#           F_O_R
#       позволяет поочередно перебирать элементы
x = range(3)
for number in x:
    print('element number', number, end=' ')
print('\n15.   ', end='')
#       также при помощи for можно перебрать элементы двух кортежей
for i in range(1, 4):
    for j in range(1, 4):
        print(i, '*', j, end=' ')
    print()
#
#
#
#
#
#
#